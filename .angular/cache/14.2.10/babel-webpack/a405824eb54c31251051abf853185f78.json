{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../generators.service\";\nimport * as i2 from \"@angular/forms\";\nexport let LoadInputComponent = /*#__PURE__*/(() => {\n  class LoadInputComponent {\n    constructor(generatorsService) {\n      this.generatorsService = generatorsService;\n    }\n\n    ngOnInit() {}\n\n    change() {\n      this.generatorsService.updateIndLoad(this.id, this.Load);\n    }\n\n  }\n\n  LoadInputComponent.ɵfac = function LoadInputComponent_Factory(t) {\n    return new (t || LoadInputComponent)(i0.ɵɵdirectiveInject(i1.GeneratorsService));\n  };\n\n  LoadInputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadInputComponent,\n    selectors: [[\"app-load-input\"]],\n    inputs: {\n      id: \"id\"\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[\"name\", \"Load\", \"type\", \"number\", \"min\", \"0\", 3, \"placeholder\", \"ngModel\", \"ngModelChange\"]],\n    template: function LoadInputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"input\", 0);\n        i0.ɵɵlistener(\"ngModelChange\", function LoadInputComponent_Template_input_ngModelChange_1_listener($event) {\n          return ctx.Load = $event;\n        })(\"ngModelChange\", function LoadInputComponent_Template_input_ngModelChange_1_listener() {\n          return ctx.change();\n        });\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵpropertyInterpolate1(\"placeholder\", \"Enter Load in hour \", ctx.id, \"\");\n        i0.ɵɵproperty(\"ngModel\", ctx.Load);\n      }\n    },\n    dependencies: [i2.DefaultValueAccessor, i2.NumberValueAccessor, i2.NgControlStatus, i2.MinValidator, i2.NgModel]\n  });\n  return LoadInputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}