{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../generators.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"../generator-graph/generator-graph.component\";\nimport * as i4 from \"../../assets/canvasjs.angular.component\";\n\nfunction OutputComponent_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4, \"G\");\n    i0.ɵɵelementStart(5, \"sub\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const out_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r5 + 1, \".\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(out_r4.index + 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(out_r4.value);\n  }\n}\n\nfunction OutputComponent_tr_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const out_r6 = ctx.$implicit;\n    const i_r7 = ctx.index;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", i_r7 + 1, \".\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(out_r6.generators);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(out_r6.Total_Pmax);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(out_r6.Total_Pmin);\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    background: a0\n  };\n};\n\nfunction OutputComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const color_r8 = ctx.$implicit;\n    const i_r9 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, color_r8));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r2.LegendText[i_r9]);\n  }\n}\n\nfunction OutputComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelement(1, \"app-generator-graph\", 9);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const i_r11 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", i_r11);\n  }\n}\n\nexport let OutputComponent = /*#__PURE__*/(() => {\n  class OutputComponent {\n    constructor(generatorsService) {\n      this.generatorsService = generatorsService;\n      this.colors = [];\n      this.flapc = this.generatorsService.get_flapc();\n      this.LegendText = [];\n      this.generators = this.generatorsService.get_generator();\n      this.power_list = [];\n      this.Output_list = [];\n      this.priority_list = this.generatorsService.get_list();\n      this.dps = [];\n    }\n\n    ngOnInit() {\n      console.log(this.flapc);\n\n      for (let i = 0; i < this.priority_list.length; i++) {\n        this.Output_list.push({\n          generators: \"\",\n          Total_Pmax: 0,\n          Total_Pmin: 0\n        });\n        this.LegendText.push(\"\");\n        let Maxpower = 0;\n        let Minpower = 0;\n\n        for (let j = 0; j < this.priority_list[i].length; j++) {\n          let generator_id = this.priority_list[i][j].index;\n          this.Output_list[i].generators += 'G' + (generator_id + 1).toString();\n          this.LegendText[i] += \"G\" + (generator_id + 1).toString();\n\n          if (j != this.priority_list[i].length - 1) {\n            this.Output_list[i].generators += \"+\";\n            this.LegendText[i] += \"+\";\n          }\n\n          Maxpower += this.generators[generator_id].Pmax;\n          Minpower += this.generators[generator_id].Pmin;\n        }\n\n        this.power_list.push(Maxpower);\n        this.Output_list[i].Total_Pmax = Maxpower;\n        this.Output_list[i].Total_Pmin = Minpower;\n      }\n\n      this.chartOptions = {\n        title: {\n          text: ''\n        },\n        animationEnabled: true,\n        axisX: {\n          title: \"Load Hour\",\n          interval: 1\n        },\n        axisY: {\n          title: \"Power (MW)\",\n          includeZero: true\n        },\n        data: this.createData(),\n        backgroundColor: '#f8f4e5'\n      };\n      let ggColors = [\"#fea481\", \"#7d8bff\", \"#eaa6fd\", \"#b9ffc3\", \"#fc7474\", \"#fcf581\"];\n\n      for (let i = 0; i < this.power_list.length; i++) {\n        if (i < ggColors.length) {\n          this.colors.push(ggColors[i]);\n        } else {\n          this.colors.push(this.getRandomColor());\n        }\n      }\n\n      let dataSeries = this.chartOptions.data[0];\n\n      for (let j = 0; j < dataSeries.dataPoints.length; j++) {\n        let assign = false;\n\n        for (let k = this.power_list.length - 1; k >= 0; k--) {\n          if (dataSeries.dataPoints[j].y <= this.power_list[k]) {\n            dataSeries.dataPoints[j].color = this.colors[k];\n            assign = true;\n            break;\n          }\n        }\n\n        if (!assign) {\n          dataSeries.dataPoints[j].color = this.colors[0];\n        }\n      }\n    }\n\n    createData() {\n      let data = [];\n      data.push({\n        type: 'column',\n        indexLabelFontColor: '#5A5757',\n        color: this.colors[0],\n        dataPoints: this.createDataset()\n      });\n\n      for (let i = 1; i < this.colors.length; i++) {\n        let temp = 'Slab' + (i + 1).toString();\n        data.push({\n          type: 'column',\n          indexLabelFontColor: '#5A5757',\n          color: this.colors[i],\n          dataPoints: []\n        });\n      }\n\n      return data;\n    }\n\n    createDataset() {\n      let loads = this.generatorsService.get_load();\n      console.log(loads);\n\n      for (let i = 0; i < loads.length; i++) {\n        this.dps.push({\n          x: i + 1,\n          y: loads[i],\n          color: 'rgb(90, 220, 0)'\n        });\n      }\n\n      return this.dps;\n    }\n\n    getRandomColor() {\n      var color = Math.floor(0x1000000 * Math.random()).toString(16);\n      return '#' + ('000000' + color).slice(-6);\n    }\n\n  }\n\n  OutputComponent.ɵfac = function OutputComponent_Factory(t) {\n    return new (t || OutputComponent)(i0.ɵɵdirectiveInject(i1.GeneratorsService));\n  };\n\n  OutputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: OutputComponent,\n    selectors: [[\"app-output\"]],\n    decls: 35,\n    vars: 5,\n    consts: [[1, \"body\"], [1, \"card\"], [1, \"title\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card2\", \"garph\"], [3, \"options\"], [1, \"legend\"], [1, \"box\", 3, \"ngStyle\"], [3, \"id\"]],\n    template: function OutputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h5\", 2);\n        i0.ɵɵtext(3, \"Commitment Scheme\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"table\", 3)(5, \"tr\")(6, \"th\");\n        i0.ɵɵtext(7, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"th\");\n        i0.ɵɵtext(9, \"Generator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"th\");\n        i0.ɵɵtext(11, \"Flapc (Rs./MWh)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(12, OutputComponent_tr_12_Template, 9, 3, \"tr\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 1)(14, \"h5\", 2);\n        i0.ɵɵtext(15, \"Priority List \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"table\", 3)(17, \"tr\")(18, \"th\");\n        i0.ɵɵtext(19, \"#\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"th\");\n        i0.ɵɵtext(21, \"Generators\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"th\");\n        i0.ɵɵtext(23, \"Max Power Output (MW)\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"th\");\n        i0.ɵɵtext(25, \"Min Power Output (MW)\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(26, OutputComponent_tr_26_Template, 9, 4, \"tr\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(27, \"div\", 5)(28, \"h5\", 2);\n        i0.ɵɵtext(29, \"Load Curve with Unit Commitment \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"canvasjs-chart\", 6);\n        i0.ɵɵelementStart(31, \"div\", 7);\n        i0.ɵɵtemplate(32, OutputComponent_div_32_Template, 4, 4, \"div\", 4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(33, \"div\");\n        i0.ɵɵtemplate(34, OutputComponent_div_34_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(12);\n        i0.ɵɵproperty(\"ngForOf\", ctx.flapc);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"ngForOf\", ctx.Output_list);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"options\", ctx.chartOptions);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.colors);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.generators);\n      }\n    },\n    dependencies: [i2.NgForOf, i2.NgStyle, i3.GeneratorGraphComponent, i4.CanvasJSChart],\n    styles: [\".title[_ngcontent-%COMP%]{font-size:14pt;line-height:28pt;font-family:Fjalla One;color:#2a293e;text-align:center}.graph[_ngcontent-%COMP%]{width:\\\"100%\\\";height:\\\"400px\\\"}.box[_ngcontent-%COMP%]{height:10px;margin:auto;width:10px}.legend[_ngcontent-%COMP%]{margin:450px auto auto;width:60%;display:grid;grid-template-columns:1fr 1fr 1fr;grid-gap:20px}p[_ngcontent-%COMP%]{margin:auto;text-align:center}.card2[_ngcontent-%COMP%]{background:#f8f4e5;border:2px solid black;box-shadow:15px 15px 1px #ffa580,15px 15px 1px 2px #000;margin:40px;height:600px;padding:20px 100px}table[_ngcontent-%COMP%]{font-size:14pt;line-height:28pt;font-family:Fjalla One;color:#2a293e;border-collapse:collapse;width:100%}td[_ngcontent-%COMP%], th[_ngcontent-%COMP%]{border:1px solid black;text-align:left;padding:8px 20px 8px 8px}\"]\n  });\n  return OutputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}