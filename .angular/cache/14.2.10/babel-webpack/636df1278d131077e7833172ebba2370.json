{"ast":null,"code":"/*\r\nCanvasJS Angular Charts - https://canvasjs.com/\r\nCopyright 2022 fenopix\r\n\r\n--------------------- License Information --------------------\r\nCanvasJS is a commercial product which requires purchase of license. Without a commercial license you can use it for evaluation purposes for upto 30 days. Please refer to the following link for further details.\r\nhttps://canvasjs.com/license/\r\n\r\n*/\n\n/*tslint:disable*/\n\n/*eslint-disable*/\n\n/*jshint ignore:start*/\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\n\nvar CanvasJS = require('./canvasjs.min');\n\nlet CanvasJSChart = /*#__PURE__*/(() => {\n  class CanvasJSChart {\n    constructor() {\n      this.shouldUpdateChart = false;\n      this.chartInstance = new EventEmitter();\n      this.options = this.options ? this.options : {};\n      this.styles = this.styles ? this.styles : {\n        width: \"100%\",\n        position: \"relative\"\n      };\n      this.styles.height = this.options.height ? this.options.height + \"px\" : \"400px\";\n      this.chartContainerId = 'canvasjs-angular-chart-container-' + CanvasJSChart._cjsChartContainerId++;\n    }\n\n    ngDoCheck() {\n      if (this.prevChartOptions != this.options) {\n        this.shouldUpdateChart = true;\n      }\n    }\n\n    ngOnChanges() {\n      //Update Chart Options & Render\n      if (this.shouldUpdateChart && this.chart) {\n        this.chart.options = this.options;\n        this.chart.render();\n        this.shouldUpdateChart = false;\n        this.prevChartOptions = this.options;\n      }\n    }\n\n    ngAfterViewInit() {\n      this.chart = new CanvasJS.Chart(this.chartContainerId, this.options);\n      this.chart.render();\n      this.prevChartOptions = this.options;\n      this.chartInstance.emit(this.chart);\n    }\n\n    ngOnDestroy() {\n      if (this.chart) this.chart.destroy();\n    }\n\n  }\n\n  CanvasJSChart._cjsChartContainerId = 0;\n\n  CanvasJSChart.ɵfac = function CanvasJSChart_Factory(t) {\n    return new (t || CanvasJSChart)();\n  };\n\n  CanvasJSChart.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CanvasJSChart,\n    selectors: [[\"canvasjs-chart\"]],\n    inputs: {\n      options: \"options\",\n      styles: \"styles\"\n    },\n    outputs: {\n      chartInstance: \"chartInstance\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"id\"]],\n    template: function CanvasJSChart_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵpropertyInterpolate(\"id\", ctx.chartContainerId);\n      }\n    },\n    encapsulation: 2\n  });\n  return CanvasJSChart;\n})();\nexport { CanvasJSChart, CanvasJS };","map":null,"metadata":{},"sourceType":"module"}